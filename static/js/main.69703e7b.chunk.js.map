{"version":3,"sources":["App.tsx","index.tsx"],"names":["Nav","className","to","exact","activeClassName","HomePage","PeoplePage","match","history","location","useState","people","setPeople","personName","params","query","URLSearchParams","search","get","pattern","RegExp","visiblePeople","filter","p","test","name","useEffect","fetch","then","res","json","length","some","push","pathname","columns","map","columnName","person","index","classnames","colName","path","App","useHistory","useLocation","type","value","onChange","event","target","component","from","ReactDOM","render","document","getElementById"],"mappings":"2QAoDMA,G,MAAM,kBACV,yBAAKC,UAAU,OACb,wBAAIA,UAAU,aACZ,wBAAIA,UAAU,aACZ,kBAAC,IAAD,CAASC,GAAG,IACVD,UAAU,YACVE,OAAK,EACLC,gBAAgB,qBAHlB,SAOF,wBAAIH,UAAU,aACZ,kBAAC,IAAD,CAASC,GAAG,UACVD,UAAU,YACVG,gBAAgB,qBAFlB,eASFC,EAAW,kBAAO,2CAMlBC,EAA8B,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAAe,EACxCC,mBAAmB,IADqB,mBAC7DC,EAD6D,KACrDC,EADqD,KAE5DC,EAAeN,EAAMO,OAArBD,WAGFE,EADe,IAAIC,gBAAgBP,EAASQ,QACfC,IAAI,UAAY,GAO7CC,EAAU,IAAIC,OAAOL,EAAO,KAE5BM,EAAgBV,EACnBW,QAAO,SAAAC,GAAC,OAAIJ,EAAQK,KAAKD,EAAEE,SAO9B,GAJAC,qBAAU,WA/EHC,MAAM,qBACVC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UA+ELF,KAAKhB,KAChB,IAEmB,IAAlBD,EAAOoB,OACT,OAAO,yCAELlB,IAAeF,EAAOqB,MAAK,SAAAT,GAAC,OAAIA,EAAEE,OAASZ,MAC7CL,EAAQyB,KAAK,CACXC,SAAU,UACVjB,OAAQ,uBAIZ,IAAIkB,EAAU,CAAC,OAAQ,MAAO,OAAQ,OAAQ,aAAc,cAE5D,OACE,yBAAKlC,UAAU,cACb,6CAGA,4BACE,sCACCkC,EAAQC,KAAI,SAAAC,GAAU,OACrB,4BACGA,OAKNhB,EAAce,KAAI,SAACE,EAAgBC,GAClC,OACE,wBAAItC,UAAWuC,IAAW,CACxB,QAAU,EACV,iBAAkB3B,IAAeyB,EAAOb,QAExC,4BAAKc,EAAQ,GAEXJ,EAAQC,KAAI,SAACK,GAAD,OACT,4BACC,kBAAC,IAAD,CAAMvC,GAAE,UAAKK,EAAMmC,KAAX,YAAmBJ,EAAOb,OAC/Ba,EAAOG,cAWbE,EA/HH,WACV,IAAMnC,EAAUoC,cACVnC,EAAWoC,cAEX9B,EADe,IAAIC,gBAAgBP,EAASQ,QACfC,IAAI,UAAY,GACnD,OACE,yBAAKjB,UAAU,OACb,4BAAQA,UAAU,eAChB,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOyC,KAAK,WACV,2BACEI,KAAK,OACLC,MAAOhC,EACPiC,SAAU,SAACC,GACTzC,EAAQyB,KAAK,CACXhB,OAAO,UAAD,OAAYgC,EAAMC,OAAOH,cAKzC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOL,KAAK,IAAIvC,OAAK,EAACgD,UAAW9C,IACjC,kBAAC,IAAD,CAAOqC,KAAK,uBAAuBS,UAAW7C,IAC9C,kBAAC,IAAD,CAAOoC,KAAK,UAAUS,UAAW,kBAAM,iDACvC,kBAAC,IAAD,CAAUC,KAAK,QAAQlD,GAAG,SCxClCmD,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.69703e7b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Switch,\n  Route,\n  NavLink,\n  Redirect,\n  RouteComponentProps,\n  Link,\n  useHistory,\n  useLocation,\n} from 'react-router-dom'\n// import { HomePage } from './components/HomePage';\n// import { PeoplePage } from './components/PeoplePage';\nimport classnames from 'classnames';\nimport './App.css';\n//import { start } from 'repl';\n\nconst getPeople = (): Promise<Person[]> => {\n  return fetch('./api/people.json')\n    .then(res => res.json());\n}\n\nconst App = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search)\n  const query: string = searchParams.get('query') || '';\n  return (\n    <div className=\"App\">\n      <header className='App__header'>\n        <Nav />\n        <Route path=\"/people\">\n          <input\n            type=\"text\"\n            value={query}\n            onChange={(event) => {\n              history.push({\n                search: `?query=${event.target.value}`\n              })\n            }} />\n        </Route>\n      </header>\n      <Switch>\n        <Route path=\"/\" exact component={HomePage}></Route>\n        <Route path=\"/people/:personName?\" component={PeoplePage}></Route>\n        <Route path=\"/people\" component={() => <h1>Page not found</h1>}></Route>\n        <Redirect from='/home' to='/' />\n      </Switch>\n    </div>\n  )\n};\n\nconst Nav = () => (\n  <nav className=\"Nav\">\n    <ul className=\"Nav__list\">\n      <li className=\"Nav__item\">\n        <NavLink to=\"/\"\n          className=\"Nav__link\"\n          exact\n          activeClassName=\"Nav__link--active\"\n        >\n          Home</NavLink>\n      </li>\n      <li className=\"Nav__item\">\n        <NavLink to=\"/people\"\n          className=\"Nav__link\"\n          activeClassName=\"Nav__link--active\"\n        >People</NavLink>\n      </li>\n    </ul>\n  </nav>\n)\n\nconst HomePage = () => (<h1> Home Page</h1>)\n\ntype Props = RouteComponentProps<{\n  personName: string;\n}>;\n\nconst PeoplePage: React.FC<Props> = ({ match, history, location }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const { personName } = match.params;\n\n  const searchParams = new URLSearchParams(location.search)\n  const query: string = searchParams.get('query') || '';\n\n  // Useful to do PAGINATION, shows page(1) and how many is there on a page(10)\n  // const page: number = Number(searchParams.get('page')) || 1;\n  // const perPage: number = Number(searchParams.get('perPage')) || 10;\n  // const start = (page - 1) * perPage;\n\n  const pattern = new RegExp(query, 'i');\n\n  const visiblePeople = people\n    .filter(p => pattern.test(p.name))\n  // .slice(start, start + perPage);\n\n  useEffect(() => {\n    getPeople().then(setPeople)\n  }, []);\n\n  if (people.length === 0) {\n    return <p>Loading...</p>;\n  }\n  if (personName && !people.some(p => p.name === personName)) {\n    history.push({\n      pathname: '/people',\n      search: '&page=1&perPages=5'\n    });\n  }\n\n  let columns = ['name', 'sex', 'born', 'died', 'motherName', 'fatherName'];\n\n  return (\n    <div className=\"PeoplePage\">\n      <h1> People table\n        {/* : Page {page}, perPage: {perPage} */}\n      </h1>\n      <tr>\n        <th>Row No</th>\n        {columns.map(columnName => (\n          <th>\n            {columnName}\n          </th>\n        ))}\n      </tr>\n\n      {visiblePeople.map((person: Person, index) => {\n        return (\n          <tr className={classnames({\n            'Person': true,\n            'Person--active': personName === person.name\n          })}>\n            <td>{index + 1}</td>\n            {\n              columns.map((colName) =>\n                (<td>\n                  <Link to={`${match.path}/${person.name}`}>\n                    {person[colName as keyof Person]}\n                  </Link>\n                </td>\n                ))}\n          </tr>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}