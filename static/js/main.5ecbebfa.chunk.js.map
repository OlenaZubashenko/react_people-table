{"version":3,"sources":["components/HomePage.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","PeoplePage","match","location","history","useState","people","setPeople","personName","params","query","URLSearchParams","search","get","useEffect","fetch","then","res","json","pattern","RegExp","visiblePeople","filter","p","test","name","visiblePeopleSorted","sortField","setSortField","isReversed","setIsReversed","length","some","push","pathname","sort","a","b","localeCompare","reverse","columns","className","type","checked","onChange","map","columnName","onClick","person","index","classnames","person__woman","sex","person__man","colName","Nav","to","exact","activeClassName","App","useHistory","useLocation","path","value","event","target","component","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ecbebfa.chunk.js","sourcesContent":["import React from 'react';\n\n const HomePage = () => (<h1> Home Page</h1>);\n\n export default HomePage;\n","import React, { useEffect, useState } from 'react';\nimport {\n  RouteComponentProps,\n\n} from 'react-router-dom'\nimport classnames from 'classnames';\n\nconst getPeople = (): Promise<Person[]> => {\n  return fetch('./api/people.json')\n    .then(res => res.json());\n}\n\n\ntype Props = RouteComponentProps<{\n  personName: string;\n}>;\n\n//const pattern = new RegExp(query, 'i');\n\n// const visiblePeople = people\n//   .filter(p => pattern.test(p.name))\n\n// useEffect(() => {\n//   getPeople().then(getPeople)\n// }, []);\n\n// if (people.length === 0) {\n//   return <p>Loading...</p>;\n// }\n// if (personName && !people.some(p => p.name === personName)) {\n//   history.push({\n//     pathname: '/people',\n//     //search: '&page=1&perPages=5'\n//   });\n// }\n\nconst PeoplePage: React.FC<Props> = ({ match, location, history }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const { personName } = match.params;\n  const searchParams = new URLSearchParams(location.search)\n  const query: string = searchParams.get('query') || '';\n\n  //   const pattern = new RegExp(query, 'i');\n\n  // const visiblePeople = people\n  //   .filter(p => pattern.test(p.name))\n\n  useEffect(() => {\n    getPeople().then(setPeople)\n  }, []);\n\n  const pattern = new RegExp(query, 'i');\n  const visiblePeople = people\n    .filter(p => pattern.test(p.name))\n  // .slice(start, start + perPage);\n\n  const visiblePeopleSorted = [...visiblePeople];\n  const [sortField, setSortField] = useState('born');\n  const [isReversed, setIsReversed] = useState(false);\n\n  if (people.length === 0) {\n    return <p>Loading...</p>;\n  }\n  if (personName && !people.some(p => p.name === personName)) {\n    history.push({\n      pathname: '/people'\n    });\n  }\n\n  visiblePeopleSorted.sort(\n    (a, b) => {\n      let _type = typeof a[sortField as keyof Person];\n      switch (_type) {\n        case 'number':\n          return (a[sortField as keyof Person] as number) - (b[sortField as keyof Person] as number);\n        case 'string':\n          return (a[sortField as keyof Person] as string).localeCompare(b[sortField as keyof Person] as string);\n        default:\n          return 0;\n      }\n    }\n  );\n\n  if (isReversed) {\n    visiblePeopleSorted.reverse();\n  }\n\n  if (people.length === 0) {\n    return <p>Loading...</p>;\n  }\n  if (personName && !people.some(p => p.name === personName)) {\n    history.push({\n      pathname: '/people',\n    });\n  }\n\n  let columns = ['name', 'sex', 'born', 'died', 'motherName', 'fatherName', 'slug'];\n\n\n  return (\n    <div className=\"PeoplePage\">\n      <h1> People table\n      </h1>\n      <div className=\"wrapper__reversed\">\n        <label className=\"title__reversed\">\n          Is Reversed\n          </label>\n      <input\n      className=\"btn__reversed\"\n            type=\"checkbox\"\n            checked={isReversed}\n            onChange={() => setIsReversed(!isReversed)}\n          />\n\n      </div>\n      <table>\n        <thead>\n          <tr>\n            <th className=\"table__head\">Row â„–</th>\n            {columns.map(columnName => (\n              <th\n                className=\"table__head\"\n                onClick={() => {\n                  setSortField(columnName)\n                }}\n              >\n                {columnName}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {visiblePeopleSorted.map((person: Person, index) => {\n            return (\n              <tr\n                className={classnames({\n                  person__woman: person.sex === 'f',\n                  person__man: person.sex === 'm',\n\n                })}\n                onClick={() => {\n                  history.push({\n                    pathname: `/people/${person.name}`,\n                  });\n                }\n                }\n              >\n                <td>{index + 1}</td>\n                {\n                  columns.map((colName) =>\n                    (<td\n                      className={classnames({\n                        'Person': true,\n                        'Person--active': personName === person.name,\n                      })}\n                    >\n                      {person[colName as keyof Person]}\n                    </td>\n                    ))}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default PeoplePage;\n\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  NavLink,\n  Redirect,\n  useHistory,\n  useLocation,\n} from 'react-router-dom'\nimport HomePage from './components/HomePage';\nimport PeoplePage from './components/PeoplePage';\n//import classnames from 'classnames';\nimport './App.css';\n\n\n\nconst App = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search)\n  const query: string = searchParams.get('query') || '';\n  return (\n    <div className=\"App\">\n      <div className=\"header__wrapper\">\n      <header className='App__header'>\n        <Nav />\n        <Route path=\"/people\">\n          <input\n            type=\"text\"\n            value={query}\n            onChange={(event) => {\n              history.push({\n                search: `?query=${event.target.value}`\n              })\n            }} />\n        </Route>\n      </header>\n      </div>\n\n      <Switch>\n        <Route path=\"/\" exact component={HomePage}></Route>\n        <Route path=\"/people/:personName?\" component={PeoplePage}></Route>\n        <h1>Page not found</h1>\n        <Redirect from='/home' to='/' />\n      </Switch>\n    </div>\n  )\n};\n\nconst Nav = () => (\n  <nav className=\"Nav\">\n    <ul className=\"Nav__list\">\n      <li className=\"Nav__item\">\n        <NavLink to=\"/\"\n          className=\"Nav__link\"\n          exact\n          activeClassName=\"Nav__link--active\"\n        >\n          Home</NavLink>\n      </li>\n      <li className=\"Nav__item\">\n        <NavLink to=\"/people\"\n          className=\"Nav__link\"\n          activeClassName=\"Nav__link--active\"\n        >People</NavLink>\n      </li>\n    </ul>\n  </nav>\n)\n\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}