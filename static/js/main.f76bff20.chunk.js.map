{"version":3,"sources":["App.tsx","index.tsx"],"names":["Nav","className","to","exact","activeClassName","HomePage","PeoplePage","match","location","history","useState","people","setPeople","personName","params","query","URLSearchParams","search","get","pattern","RegExp","visiblePeople","filter","p","test","name","useEffect","fetch","then","res","json","length","some","push","pathname","columns","map","columnName","person","index","classnames","person__woman","sex","person__man","onClick","console","log","slug","colName","App","useHistory","useLocation","path","type","value","onChange","event","target","component","from","ReactDOM","render","document","getElementById"],"mappings":"2QAoDMA,G,MAAM,kBACV,yBAAKC,UAAU,OACb,wBAAIA,UAAU,aACZ,wBAAIA,UAAU,aACZ,kBAAC,IAAD,CAASC,GAAG,IACVD,UAAU,YACVE,OAAK,EACLC,gBAAgB,qBAHlB,SAOF,wBAAIH,UAAU,aACZ,kBAAC,IAAD,CAASC,GAAG,UACVD,UAAU,YACVG,gBAAgB,qBAFlB,eASFC,EAAW,kBAAO,2CAOlBC,EAA8B,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACxCC,mBAAmB,IADqB,mBAC7DC,EAD6D,KACrDC,EADqD,KAE5DC,EAAeN,EAAMO,OAArBD,WAGFE,EADe,IAAIC,gBAAgBR,EAASS,QACfC,IAAI,UAAY,GAO7CC,EAAU,IAAIC,OAAOL,EAAO,KAE5BM,EAAgBV,EACnBW,QAAO,SAAAC,GAAC,OAAIJ,EAAQK,KAAKD,EAAEE,SAO9B,GAJAC,qBAAU,WAhFHC,MAAM,qBACVC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAgFLF,KAAKhB,KAChB,IAEmB,IAAlBD,EAAOoB,OACT,OAAO,yCAELlB,IAAeF,EAAOqB,MAAK,SAAAT,GAAC,OAAIA,EAAEE,OAASZ,MAC7CJ,EAAQwB,KAAK,CACXC,SAAU,YAMd,IAAIC,EAAU,CAAC,OAAQ,MAAO,OAAQ,OAAQ,aAAc,aAAc,QAU1E,OACE,yBAAKlC,UAAU,cACb,6CAGA,+BACE,+BACE,4BACE,wBAAIA,UAAU,eAAd,cACCkC,EAAQC,KAAI,SAAAC,GAAU,OACrB,wBAAIpC,UAAU,eACXoC,QAKT,+BACGhB,EAAce,KAAI,SAACE,EAAgBC,GAClC,OACE,wBACAtC,UAAWuC,IAAW,CACpBC,cAA8B,MAAfH,EAAOI,IACtBC,YAA4B,MAAfL,EAAOI,MAGpBE,QAAS,WACPC,QAAQC,IAAIR,EAAOS,MAEnBtC,EAAQwB,KAAK,CACXC,SAAS,WAAD,OAAaI,EAAOb,UAMhC,4BAAKc,EAAQ,GAEXJ,EAAQC,KAAI,SAACY,GAAD,OACT,wBACC/C,UAAWuC,IAAW,CACpB,QAAU,EACV,iBAAkB3B,IAAeyB,EAAOb,QAGzCa,EAAOU,eAYfC,EA7JH,WACV,IAAMxC,EAAUyC,cACV1C,EAAW2C,cAEXpC,EADe,IAAIC,gBAAgBR,EAASS,QACfC,IAAI,UAAY,GACnD,OACE,yBAAKjB,UAAU,OACb,4BAAQA,UAAU,eAChB,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOmD,KAAK,WACV,2BACEC,KAAK,OACLC,MAAOvC,EACPwC,SAAU,SAACC,GACT/C,EAAQwB,KAAK,CACXhB,OAAO,UAAD,OAAYuC,EAAMC,OAAOH,cAKzC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOF,KAAK,IAAIjD,OAAK,EAACuD,UAAWrD,IACjC,kBAAC,IAAD,CAAO+C,KAAK,uBAAuBM,UAAWpD,IAC9C,8CACA,kBAAC,IAAD,CAAUqD,KAAK,QAAQzD,GAAG,SCxClC0D,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f76bff20.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Switch,\n  Route,\n  NavLink,\n  Redirect,\n  RouteComponentProps,\n  //Link,\n  useHistory,\n  useLocation,\n} from 'react-router-dom'\n// import { HomePage } from './components/HomePage';\n// import { PeoplePage } from './components/PeoplePage';\nimport classnames from 'classnames';\nimport './App.css';\n//import { start } from 'repl';\n\nconst getPeople = (): Promise<Person[]> => {\n  return fetch('./api/people.json')\n    .then(res => res.json());\n}\n\nconst App = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search)\n  const query: string = searchParams.get('query') || '';\n  return (\n    <div className=\"App\">\n      <header className='App__header'>\n        <Nav />\n        <Route path=\"/people\">\n          <input\n            type=\"text\"\n            value={query}\n            onChange={(event) => {\n              history.push({\n                search: `?query=${event.target.value}`\n              })\n            }} />\n        </Route>\n      </header>\n      <Switch>\n        <Route path=\"/\" exact component={HomePage}></Route>\n        <Route path=\"/people/:personName?\" component={PeoplePage}></Route>\n        <h1>Page not found</h1>\n        <Redirect from='/home' to='/' />\n      </Switch>\n    </div>\n  )\n};\n\nconst Nav = () => (\n  <nav className=\"Nav\">\n    <ul className=\"Nav__list\">\n      <li className=\"Nav__item\">\n        <NavLink to=\"/\"\n          className=\"Nav__link\"\n          exact\n          activeClassName=\"Nav__link--active\"\n        >\n          Home</NavLink>\n      </li>\n      <li className=\"Nav__item\">\n        <NavLink to=\"/people\"\n          className=\"Nav__link\"\n          activeClassName=\"Nav__link--active\"\n        >People</NavLink>\n      </li>\n    </ul>\n  </nav>\n)\n\nconst HomePage = () => (<h1> Home Page</h1>)\n\ntype Props = RouteComponentProps<{\n  personName: string;\n}>;\n\n\nconst PeoplePage: React.FC<Props> = ({ match, location, history }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const { personName } = match.params;\n  //const history = useHistory();\n  const searchParams = new URLSearchParams(location.search)\n  const query: string = searchParams.get('query') || '';\n\n  // Useful to do PAGINATION, shows page(1) and how many is there on a page(10)\n  // const page: number = Number(searchParams.get('page')) || 1;\n  // const perPage: number = Number(searchParams.get('perPage')) || 10;\n  // const start = (page - 1) * perPage;\n\n  const pattern = new RegExp(query, 'i');\n\n  const visiblePeople = people\n    .filter(p => pattern.test(p.name))\n  // .slice(start, start + perPage);\n\n  useEffect(() => {\n    getPeople().then(setPeople)\n  }, []);\n\n  if (people.length === 0) {\n    return <p>Loading...</p>;\n  }\n  if (personName && !people.some(p => p.name === personName)) {\n    history.push({\n      pathname: '/people',\n      //search: '&page=1&perPages=5'\n    });\n  }\n\n\n  let columns = ['name', 'sex', 'born', 'died', 'motherName', 'fatherName', 'slug'];\n\n\n  // const onPersonSelected = (person: Person) => {\n  //   history.push({\n  //     pathname: `/people/${person.slug}`,// `/people/${person.name}-${person.born}`\n  //     //search: `?query=${personName}`\n  //   })\n  // }\n\n  return (\n    <div className=\"PeoplePage\">\n      <h1> People table\n        {/* : Page {page}, perPage: {perPage} */}\n      </h1>\n      <table>\n        <thead>\n          <tr>\n            <th className=\"table__head\">Row â„–</th>\n            {columns.map(columnName => (\n              <th className=\"table__head\">\n                {columnName}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {visiblePeople.map((person: Person, index) => {\n            return (\n              <tr\n              className={classnames({\n                person__woman: person.sex === 'f',\n                person__man: person.sex === 'm',\n\n              })}\n                onClick={() => {\n                  console.log(person.slug);\n\n                  history.push({\n                    pathname: `/people/${person.name}`,\n                  });\n                }\n                  //onPersonSelected(person)\n                }\n              >\n                <td>{index + 1}</td>\n                {\n                  columns.map((colName) =>\n                    (<td\n                      className={classnames({\n                        'Person': true,\n                        'Person--active': personName === person.name,\n                      })}\n                    >\n                      {person[colName as keyof Person]}\n                    </td>\n                    ))}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default App;\n\n{/* <Link to={`${match.path}/${person.name}`}>\n                    {person[colName as keyof Person]}\n                  </Link> */}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}